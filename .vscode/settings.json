{
  "typescript.tsdk": "./tournament-scheduler/node_modules/typescript/lib",
  "editor.rulers": [
    80,
    120
  ],
  "[git-commit]": {
    "editor.rulers": [
      72
    ]
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "[markdown]": {
    "files.trimTrailingWhitespace": false,
  },
  "trailing-spaces.includeEmptyLines": true,
  "trailing-spaces.trimOnSave": true,
  "trailing-spaces.syntaxIgnore": [
    "markdown"
  ],
  "editor.comments.insertSpace": true,
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  "editor.tabSize": 2,
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": true,
    "source.fixAll.unusedImports": false,
    "source.fixAll.convertImportFormat": true,
    "source.organizeImports": false,
  },
  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.pyi?",
        "cmd": "unify ${file} --in-place --quote=\"\\\"\""
      },
      {
        "match": "\\.pyi?",
        "cmd": "add-trailing-comma ${file} --py36-plus"
      },
    ]
  },
  // Set the default formatter to help avoid Prettier
  "[json][jsonc][html]": {
    "editor.defaultFormatter": "vscode.html-language-features",
  },
  "[javascript][javascriptreact][typescript][typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
  },
  "javascript.preferences.quoteStyle": "single",
  "typescript.preferences.quoteStyle": "single",
  "html.format.wrapAttributes": "force-expand-multiline",
  "javascript.format.semicolons": "remove",
  "typescript.format.semicolons": "remove",
  "eslint.validate": [
    "typescript",
    "typescriptreact"
  ],
  "eslint.workingDirectories": [
    {
      "mode": "auto"
    }
  ],
  "eslint.rules.customizations": [
    {
      "rule": "*",
      "severity": "downgrade"
    }
  ],
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "files.associations": {
    ".flake8": "properties",
    ".eslintrc*.json": "jsonc",
    "tsconfig*.json": "jsonc",
    // "*.html": "jinja-html"
    "*.html": "html"
  },
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "build": true,
    "**/.mypy_cache": true,
    "**/__pycache__/": true,
    "**/node_modules": false,
    "*.zip": true,
    "**/dist/**/*.js": false,
    "**/dist/**/*.map": true,
    "**/src/react-app-env.d.ts": true,
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "*.lock": true,
    "package-lock.json": true,
  },
  "[python]": {
    // Cannot use autotpep8 until https://github.com/microsoft/vscode-autopep8/issues/32 is fixed
    "editor.defaultFormatter": "ms-python.python",
    "editor.tabSize": 4,
    "editor.rulers": [
      72, // PEP8-17 docstrings
      // 79, // PEP8-17 default max
      // 88, // Black default
      // 99, // PEP8-17 acceptable max
      120, // Our hard rule
    ],
    "editor.codeActionsOnSave": {
      "source.organizeImports": true,
    },
  },
  // Important to follow the config in pyrightconfig.json
  "python.analysis.useLibraryCodeForTypes": false,
  "python.analysis.diagnosticMode": "workspace",
  "python.formatting.provider": "autopep8",
  "isort.check": true,
  "isort.importStrategy": "fromEnvironment",
  "python.linting.enabled": true,
  // Use the new Pylint extension instead
  "python.linting.pylintEnabled": false,
  "pylint.severity": {
    "convention": "Warning",
    "error": "Error",
    "fatal": "Error",
    "refactor": "Warning",
    "warning": "Warning",
    "info": "Information"
  },
  // Use the new Flake8 extension instead
  "python.linting.flake8Enabled": false,
  // Partial codes don't work yet: https://github.com/microsoft/vscode-flake8/issues/7
  "flake8.severity": {
    "convention": "Warning",
    "error": "Error",
    "fatal": "Error",
    "refactor": "Warning",
    "warning": "Warning",
    "info": "Warning",
    // builtins
    "A": "Warning",
    // mccabe
    "C": "Warning",
    // class attributes order
    "CCE": "Warning",
    // pycodestyles
    "E": "Warning",
    "E9": "Error", // Runtime
    "W": "Warning",
    "W6": "Error", // Deprecation warning
    // Pyflakes
    "F": "Warning",
    // PEP8 Naming convention
    "N": "Warning",
    // Simplify
    "SIM": "Warning",
    "SIM9": "Information",
    // PYI
    "Y": "Warning",
  },
  // PyRight obsoletes mypy
  "python.linting.mypyEnabled": false,
  // Is already wrapped by Flake8, prospector and pylama
  "python.linting.pycodestyleEnabled": false,
  // Just another wrapper, use Flake8 OR this
  "python.linting.prospectorEnabled": false,
  // Just another wrapper, use Flake8 OR this
  "python.linting.pylamaEnabled": false,
  "python.linting.banditEnabled": true,
  "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationForFirstPipeline",
  "powershell.codeFormatting.autoCorrectAliases": true,
  "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
  "powershell.codeFormatting.useConstantStrings": true,
  "powershell.codeFormatting.useCorrectCasing": true,
  "powershell.codeFormatting.whitespaceBetweenParameters": true,
  "powershell.integratedConsole.showOnStartup": false,
  "terminal.integrated.defaultProfile.windows": "PowerShell",
}
